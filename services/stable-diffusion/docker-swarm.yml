services:
# stable diffusion

  # Expand to support the other ui - update traefic for comfyui
  # Setup other swarm setups the same - create none swarm support as well?

  download:
    image: comfy-download
    user: ${PUID:-1000}:${PGID:-1000}
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - CLI_ARGS=
    networks:
      - diffusion_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./stable-diffusion-webui-docker/data:/data

  comfyui:
    image: comfy-ui
    user: ${PUID:-1000}:${PGID:-1000}
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - CLI_ARGS=
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./stable-diffusion-webui-docker/data:/data
      - ./stable-diffusion-webui-docker/output:/output
    stop_signal: SIGKILL
    tty: true
    networks:
      - proxy
      - diffusion_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
            
        # Agent Support
        - "traefik.enable=true"
        - "traefik.http.routers.diffusion.rule=Host(`diffusion.local.briangebel.com`)"
        - "traefik.http.routers.diffusion.entrypoints=websecure"
        - "traefik.http.services.diffusion.loadbalancer.server.port=7860"
        - "traefik.http.routers.diffusion.service=stable-diffusion"
        - "traefik.http.routers.diffusion.tls.certresolver=leresolver"

networks:
  proxy:
    external: true
  diffusion_network:
    name: diffusion_network
    driver: overlay
    attachable: true
